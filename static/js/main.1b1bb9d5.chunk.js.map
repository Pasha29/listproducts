{"version":3,"sources":["Components/Header/Header.module.css","Components/Footer/Footer.module.css","Redux/authReducer.js","Components/Login/Login.js","Redux/reduxStore.js","Components/Header/Header.js","Components/Footer/Footer.js","Components/ProductBlock/ProductBlock.js","Redux/authRedirect.js","Components/SpecificProduct/SpecificProduct.js","Components/ProductBlock/ProductBlockContainer.js","App.js","serviceWorker.js","index.js","Components/ProductBlock/ProductBlock.module.css","Components/SpecificProduct/SpecificProduct.module.css","Components/Login/Login.module.css"],"names":["module","exports","initialState","isAuth","AuthorizationAC","type","logoutTC","dispatch","console","log","authReducer","state","action","connect","auth","loginTC","login","password","localUserData","map","item","pattern","RegExp","test","props","to","className","s","container","initialValues","email","validate","values","errors","onSubmit","isSubmitting","authBlock","inputBlock","placeholder","input","name","errorMessage","component","buttonSubmit","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","wrapper","headerLogo","enterText","logoutButton","onClick","Footer","ProductBlock","headText","localProductData","blockData","key","id","imgBlock","prodImg","src","ImageURL","alt","prodData","propDescription","manufacturer","Manufacturer","sku","SKU","prodPrice","RetailPrice","mapStateToProps","SpecificProduct","TotalStock","Description","withRedirect","Component","authRedirect","this","React","authRedirectComponent","prodId","match","params","withRouterRedirect","withRouter","App","path","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1b1bb9d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__2i2MS\",\"wrapper\":\"Header_wrapper__TEk8U\",\"headerLogo\":\"Header_headerLogo__3H8rt\",\"enterText\":\"Header_enterText__16Rwm\",\"logoutButton\":\"Header_logoutButton__odKMu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__2zypD\"};","import localUserData from '../Data/localDataForAuth.json';\r\n\r\nconst USER_AUTHORIZATION = 'USER_AUTHORIZATION';\r\n\r\nlet initialState = {\r\n    isAuth: false\r\n}\r\n\r\nlet authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_AUTHORIZATION: {\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst AuthorizationAC = (isAuth) => ({ type: USER_AUTHORIZATION, isAuth })\r\n\r\nexport let loginTC = (login, password) => {\r\n    return (dispatch) => {\r\n        localUserData.map(item => {\r\n            let pattern = new RegExp('[A-Za-z0-9\\.]*@mail\\.ch', \"gim\");\r\n            \r\n            if (login === item.login && password === item.password && !pattern.test(login)) {\r\n                dispatch(AuthorizationAC(true));\r\n                console.log('auth successful');\r\n            }\r\n            else {\r\n                console.log('auth unsuccessful');\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport let logoutTC = () => {\r\n    return (dispatch) => {\r\n        dispatch(AuthorizationAC(false));\r\n        console.log('logout successful');\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loginTC } from '../../Redux/authReducer';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport s from './Login.module.css';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Login = (props) => {\r\n    console.log('login props');\r\n    console.log(props);\r\n    if(props.isAuth){\r\n        return <Redirect to='/products'/>\r\n    }\r\n    else {\r\n    return (\r\n    <div className={s.container}>\r\n        <Formik\r\n        initialValues={{ email: '', password: '' }}\r\n        validate={values => {\r\n            const errors = {};\r\n            if (!values.email) {\r\n                errors.email = 'This field is required!';\r\n            }\r\n            // else if (\r\n            // !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n            // ) {\r\n            // errors.email = 'Invalid email address';\r\n            // }\r\n            return errors;\r\n        }}\r\n        onSubmit={(values) => {\r\n            props.loginTC(values.email, values.password);\r\n        }}\r\n        >\r\n        {({ isSubmitting }) => (\r\n            <Form className={s.authBlock}>\r\n                <div className={s.inputBlock}>\r\n                    <p>Логин</p>\r\n                    <Field placeholder={'Введите Email'} className={s.input} name=\"email\" />\r\n                    <ErrorMessage className={s.errorMessage} name=\"email\" component=\"div\" />\r\n                </div>\r\n                \r\n                <div className={s.inputBlock}>\r\n                    <p>Пароль</p>\r\n                    <Field placeholder={'Введите пароль'} className={s.input} type=\"password\" name=\"password\" />\r\n                    <ErrorMessage className={s.errorMessage} name=\"password\" component=\"div\" />\r\n                </div>\r\n                \r\n                <div className={s.inputBlock}>\r\n                    <button className={s.buttonSubmit} type=\"submit\">\r\n                        Войти\r\n                    </button>\r\n                </div>\r\n            </Form>\r\n        )}\r\n        </Formik>\r\n    </div>\r\n    )\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { loginTC })(Login);\r\n\r\n\r\n\r\n\r\n\r\n  ","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport authReducer from './authReducer';\r\n\r\nlet reducers = combineReducers({\r\n    auth: authReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { logoutTC } from '../../Redux/authReducer';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.wrapper}>\r\n                <p className={s.headerLogo}>Логотип</p>\r\n                {props.isAuth ? <><p className={s.enterText}>Продукция</p>\r\n                <p className={s.logoutButton} onClick={props.logoutTC}>Выйти из аккаунта</p></>\r\n                : <p className={s.enterText}>Войти в аккаунт</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logoutTC })(Header);","import React from 'react';\r\nimport s from './Footer.module.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className={s.container}></div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport s from './ProductBlock.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst ProductBlock = (props) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <p className={s.headText}>Наша продукция</p>\r\n\r\n            <div className={s.wrapper}>\r\n                {props.localProductData.map(item =>\r\n\r\n                    <div className={s.blockData} key={item.id}>\r\n                        <NavLink to={\"/products/\" + item.id}>\r\n                            <div className={s.imgBlock}>\r\n                                <img className={s.prodImg} src={item.ImageURL} alt={item.id} />\r\n                            </div>\r\n                        </NavLink>\r\n\r\n                        <div className={s.prodData}>\r\n                            <div className={s.propDescription}>\r\n                                <p className={s.manufacturer}>{item.Manufacturer}</p>\r\n                                <p className={s.sku}>{item.SKU}</p>\r\n                            </div>\r\n                            <div className={s.prodPrice}>\r\n                                <p>{item.RetailPrice} грн.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductBlock;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport let authRedirectComponent = (Component) => { \r\nclass authRedirect extends React.Component {\r\n    render(){\r\n        if(!this.props.isAuth) return <Redirect to='/login'/>\r\n        return <Component {...this.props}/>\r\n    }\r\n}\r\nlet containerAuthRedirect = connect(mapStateToProps)(authRedirect);\r\n\r\nreturn containerAuthRedirect;\r\n}","import React from 'react';\r\nimport s from './SpecificProduct.module.css'\r\n\r\nlet SpecificProduct = ({localProductData}) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <p className={s.headText}>Товар</p>\r\n\r\n            <div className={s.wrapper}>\r\n                <div className={s.blockData} key={localProductData.id}>\r\n                    <div className={s.imgBlock}>\r\n                        <img className={s.prodImg} src={localProductData.ImageURL} alt={localProductData.id}/>\r\n                    </div>\r\n\r\n                    <div className={s.prodData}>\r\n                        <div className={s.propDescription}>\r\n                            <p className={s.manufacturer}>{localProductData.Manufacturer}</p>\r\n                            <p className={s.sku}>{localProductData.SKU}</p>\r\n                            <p>Количество товара: {localProductData.TotalStock}</p>\r\n                            <p className={s.prodPrice}>{localProductData.RetailPrice} грн.</p>\r\n                            <p>{localProductData.Description}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SpecificProduct;","import React from 'react';\r\nimport ProductBlock from './ProductBlock';\r\nimport { connect } from 'react-redux';\r\nimport { logoutTC } from '../../Redux/authReducer';\r\nimport localProductData from '../../Data/localData.json';\r\nimport { authRedirectComponent } from '../../Redux/authRedirect';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SpecificProduct from '../SpecificProduct/SpecificProduct';\r\n\r\nclass ProductBlockContainer extends React.Component {\r\n    render(){\r\n        let prodId = this.props.match.params.prodId;\r\n        if(prodId){\r\n            return <SpecificProduct localProductData={localProductData[prodId]}/>\r\n        }\r\n        return <ProductBlock localProductData={localProductData} logoutTC={this.props.logoutTC}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet withRedirect = authRedirectComponent(ProductBlockContainer);\r\nlet withRouterRedirect = withRouter(withRedirect);\r\n\r\nexport default connect(mapStateToProps, { logoutTC })(withRouterRedirect);","import React from 'react';\nimport './App.css';\nimport Login from './Components/Login/Login';\nimport { Provider } from 'react-redux';\nimport store from './Redux/reduxStore';\nimport Header from './Components/Header/Header';\nimport Footer from './Components/Footer/Footer';\nimport { Route, BrowserRouter, HashRouter } from 'react-router-dom';\nimport ProductBlockContainer from './Components/ProductBlock/ProductBlockContainer';\n\nlet App = (props) => {\n  return (\n    <Provider store={store}>\n      <div className=\"appContainer\">\n        <HashRouter>\n        <Header />\n        <Route path='/' render={() => <Login />} />\n        <Route path='/products/:prodId?' render={() => <ProductBlockContainer />} />\n        <Footer />\n        </HashRouter>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProductBlock_container__2CND-\",\"wrapper\":\"ProductBlock_wrapper__1i0_V\",\"blockData\":\"ProductBlock_blockData__zg4M0\",\"headText\":\"ProductBlock_headText__1KUPZ\",\"imgBlock\":\"ProductBlock_imgBlock__2VAgk\",\"prodImg\":\"ProductBlock_prodImg__1khy3\",\"prodData\":\"ProductBlock_prodData__2gVjg\",\"propDescription\":\"ProductBlock_propDescription__x3tx-\",\"manufacturer\":\"ProductBlock_manufacturer__1sm74\",\"sku\":\"ProductBlock_sku__3BkT8\",\"prodPrice\":\"ProductBlock_prodPrice__3LRnf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SpecificProduct_container__ZPlso\",\"blockData\":\"SpecificProduct_blockData__2lVt-\",\"headText\":\"SpecificProduct_headText__O5mzT\",\"imgBlock\":\"SpecificProduct_imgBlock__3EIe0\",\"prodData\":\"SpecificProduct_prodData__1_wN8\",\"prodImg\":\"SpecificProduct_prodImg__22XeY\",\"manufacturer\":\"SpecificProduct_manufacturer__7xwYs\",\"sku\":\"SpecificProduct_sku__3EYSi\",\"prodPrice\":\"SpecificProduct_prodPrice__2SEUD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__1yc4_\",\"authBlock\":\"Login_authBlock__36DSk\",\"inputBlock\":\"Login_inputBlock__3gO-Z\",\"input\":\"Login_input__2qP4W\",\"buttonSubmit\":\"Login_buttonSubmit__zY7VF\",\"errorMessage\":\"Login_errorMessage__2OPHe\"};"],"sourceRoot":""}